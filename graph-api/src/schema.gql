# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountModel {
  createTime: Float!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  preferredCurrency: String!
  updateTime: Float!
}

type CardModel {
  accountId: String!
  color: String!
  company: String!
  createTime: Float!
  name: String!
  id: ID!
  type: String!
  updateTime: Float!
}

type CategoryModel {
  icon: String!
  id: ID!
  name: String!
}

type DateSpendingModel {
  credit: Float!
  currencyCode: String!
  date: String!
  debit: Float!
}

input EmailCredentialsInput {
  email: String!
  plainPassword: String!
}

type ExchangeRatesModel {
  base: String!
  date: String!
  rates: JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type JwtModel {
  exp: Float
  iat: Float!
  token: String!
}

type Mutation {
  createAccount(data: NewAccountInput!): AccountModel!
  updateAccount(data: UpdateAccountInput!): AccountModel!
  updatePassword(data: NewPasswordInput!): Boolean!
  createCard(data: NewCardInput!): CardModel!
  deleteCard(cardId: String!): Boolean!
  updateCard(data: UpdateCardInput!, cardId: String!): CardModel!
  createTransaction(data: NewTransactionInput!): TransactionModel!
  deleteTransaction(transactionId: String!): Boolean!
  updateTransaction(data: UpdateTransactionInput!, transactionId: String!): TransactionModel!
}

input NewAccountInput {
  email: String!
  firstName: String!
  lastName: String!
  plainPassword: String!
}

input NewCardInput {
  color: String!
  company: String!
  name: String!
  type: String!
}

input NewPasswordInput {
  currentPassword: String!
  nextPassword: String!
}

input NewTransactionInput {
  amount: Float!
  cardId: String!
  categoryId: String!
  currencyCode: String!
  description: String
  postTime: String!
  type: String!
  vendor: String!
}

type Query {
  signInWithEmail(data: EmailCredentialsInput!): JwtModel!
  refreshToken: JwtModel!
  getMyAccount: AccountModel!
  getAllCards: [CardModel!]!
  getCard(cardId: String!): CardModel
  getRecentTransactions: [TransactionModel!]!
  getTransaction(transactionId: String!): TransactionModel
  getTransactions(skip: Float!): [TransactionModel!]!
  getTransactionsInCard(skip: Float!, cardId: String!): [TransactionModel!]!
  getTransactionsInCategory(skip: Float!, categoryId: String!): [TransactionModel!]!
  searchVendors(keywords: String!): [String!]!
  getAllCategories: [CategoryModel!]!
  getExchangeRates(currency: String!, date: String!): ExchangeRatesModel!
  getDailySpending: [DateSpendingModel!]!
  getMonthlySpending(month: String!, cardId: String!): DateSpendingModel!
}

type TransactionModel {
  accountId: String!
  amount: Float!
  cardId: String!
  categoryId: String!
  createTime: Float!
  currencyCode: String!
  description: String
  id: ID!
  postTime: String!
  type: String!
  updateTime: Float!
  vendor: String!
}

input UpdateAccountInput {
  email: String
  firstName: String
  lastName: String
  plainPassword: String!
  preferredCurrency: String
}

input UpdateCardInput {
  color: String
  company: String
  name: String
  type: String
}

input UpdateTransactionInput {
  amount: Float
  cardId: String
  categoryId: String
  currencyCode: String
  description: String
  postTime: String
  type: String
  vendor: String
}
